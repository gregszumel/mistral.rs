searchState.loadedDescShard("mistralrs_vision", 0, "This crate provides vision utilities for mistral.rs …\nApplication of transforms to the Self type.\nA transform over an image. The input may vary but the …\nResize the image via nearest interpolation.\nNormalize the image data based on the mean and standard …\nMultiply the pixe values by the provided factor.\nConvert an image to a tensor. This converts the data from …\nConvert an image to a tensor without normalizing to …\nTransforms to apply, starting with the <code>input</code> and then with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven the image sizes (h, w) and the minimum and maximum …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate pixel mask of shape (c, max_h, max_w). 1 …\nPad an image of shape (c, h, w) to (c, max_h, max_w) by …")